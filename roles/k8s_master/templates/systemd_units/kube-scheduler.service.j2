{% set _feature_gates = [] %}
{%- if k8s__feature_gates is defined -%}
    {% for _fg_name, _fg_flag in k8s__feature_gates.items() -%}
        {{ _feature_gates.append('%s=%s'|format(_fg_name, _fg_flag)) }}
    {%- endfor %}
{%- endif %}
[Unit]
Description=Kubernetes Scheduler
Documentation=https://github.com/kubernetes/kubernetes
After=network.target

[Service]
User=kubernetes
Group=kubernetes
ExecStart={{ k8s__k8s_bin_dir }}/kube-scheduler \
  --authentication-kubeconfig={{ k8s_master__kubeconfig_dir }}/kube-scheduler.kubeconfig \
  --authorization-kubeconfig={{ k8s_master__kubeconfig_dir }}/kube-scheduler.kubeconfig \
  --bind-address={{ k8s_master__kube_scheduler_bind_address }} \
{% if _feature_gates|length > 0 %}
  --feature-gates={{ _feature_gates|join(',') }} \
{% endif %}
  --config={{ k8s_master__k8s_configs_dir }}/kube-scheduler.conf \
  --secure-port={{ k8s_master__kube_scheduler_secure_port }} \
{% if not k8s_master__kube_scheduler_use_auto_generated_serving_cert %}
  --tls-cert-file={{ k8s_master__pki_dir }}/kube-scheduler-client.crt \
{% endif %}
  --tls-cipher-suites={{ k8s_master__kube_scheduler_tls_cipher_suites }} \
  --tls-min-version={{ k8s_master__kube_scheduler_tls_min_version }} \
{% if not k8s_master__kube_scheduler_use_auto_generated_serving_cert %}
  --tls-private-key-file={{ k8s_master__pki_dir }}/kube-scheduler-client.key \
{% endif %}
  --v={{ k8s_master__kube_scheduler_vlog_level }}
Restart=always
RestartSec={{ k8s_master__kube_scheduler_restart_sec }}s

[Install]
WantedBy=multi-user.target
