{% set _etcd_servers = [] %}
{% for _, _hostvar in hostvars.items() %}
    {%- if _hostvar.host__is_etcd -%}
        {{ _etcd_servers.append('https://%s:%d'|format(_hostvar.host__public_address, _hostvar.host__etcd_server_port)) }}
    {%- endif %}
{% endfor %}

{%- set _feature_gates = [] %}
{%- if k8s__feature_gates is defined -%}
    {% for _fg_name, _fg_flag in k8s__feature_gates.items() -%}
        {{ _feature_gates.append('%s=%s'|format(_fg_name, _fg_flag)) }}
    {%- endfor %}
{%- endif %}
[Unit]
Description=Kubernetes API Server
Documentation=https://github.com/kubernetes/kubernetes
After=network.target
After=etcd.service

[Service]
User=kubernetes
Group=kubernetes
ExecStart=/usr/bin/kube-apiserver \
  --advertise-address={{ host__public_address }} \
  --allow-privileged=true \
  --anonymous-auth=false \
  --audit-log-format={{ k8s_master__kube_apiserver_audit_log_format }} \
  --audit-log-maxage={{ k8s_master__kube_apiserver_audit_log_maxage }} \
  --audit-log-maxbackup={{ k8s_master__kube_apiserver_audit_log_maxbackup }} \
  --audit-log-maxsize={{ k8s_master__kube_apiserver_audit_log_maxsize }} \
  --audit-log-path={{ k8s_master__kube_apiserver_audit_log_path }} \
  --audit-policy-file={{ k8s_master__k8s_configs_dir }}/audit-policy.conf \
  --authorization-mode=Node,RBAC \
  --bind-address={{ k8s_master__kube_apiserver_bind_address }} \
  --client-ca-file={{ k8s_master__pki_dir }}/ca.crt \
{% if k8s__cloud_provider is defined and k8s__cloud_provider != 'external' %}
  --cloud-config={{ k8s_master__k8s_configs_dir }}/cloud.conf \
  --cloud-provider={{ k8s__cloud_provider }} \
{% endif %}
  --enable-admission-plugins={{ k8s_master__kube_apiserver_enable_admission_plugins }} \
  --enable-bootstrap-token-auth=true \
  --etcd-cafile={{ k8s_master__pki_dir }}/etcd-ca.crt \
  --etcd-certfile={{ k8s_master__pki_dir }}/etcd-client.crt \
  --etcd-compaction-interval={{ k8s_master__kube_apiserver_etcd_compaction_interval }} \
  --etcd-keyfile={{ k8s_master__pki_dir }}//etcd-client.key \
{% if k8s_master__kube_apiserver_etcd_servers.auto_set %}
  --etcd-servers={{ _etcd_servers | join(',') }} \
{% else %}
  --etcd-servers={{ k8s_master__kube_apiserver_etcd_servers.servers }} \
{% endif %}
  --experimental-encryption-provider-config={{ k8s_master__k8s_configs_dir }}/encryption.conf \
  --event-ttl={{ k8s_master__kube_apiserver_event_ttl }} \
{% if _feature_gates | length > 0 %}
  --feature-gates={{ _feature_gates | join(',') }} \
{% endif %}
  --insecure-port={{ k8s_master__kube_apiserver_insecure_port }} \
  --kubelet-certificate-authority={{ k8s_master__pki_dir }}/ca.crt \
  --kubelet-client-certificate={{ k8s_master__pki_dir }}/apiserver-kubelet-client.crt \
  --kubelet-client-key={{ k8s_master__pki_dir }}/apiserver-kubelet-client.key \
  --kubelet-port={{ k8s__kubelet_port }} \
  --kubelet-preferred-address-types={{ k8s_master__kube_apiserver_kubelet_preferred_address_types }} \
  --kubernetes-service-node-port={{ k8s_master__kube_apiserver_kubernetes_service_node_port }} \
  --profiling={{ k8s_master__kube_apiserver_profiling }} \
  --proxy-client-cert-file={{ k8s_master__pki_dir }}/front-proxy-client.crt \
  --proxy-client-key-file={{ k8s_master__pki_dir }}/front-proxy-client.key \
  --repair-malformed-updates={{ k8s_master__kube_apiserver_repair_malformed_updates }} \
  --requestheader-allowed-names=front-proxy-client \
  --requestheader-client-ca-file={{ k8s_master__pki_dir }}/front-proxy-ca.crt \
  --requestheader-extra-headers-prefix=X-Remote-Extra- \
  --requestheader-group-headers=X-Remote-Group \
  --requestheader-username-headers=X-Remote-User \
  --secure-port={{ k8s__kube_apiserver_secure_port }} \
  --service-account-key-file={{ k8s_master__pki_dir }}/kube-controller-manager.pub \
  --service-cluster-ip-range={{ k8s__service_cluster_ip_range }} \
  --service-node-port-range={{ k8s_master__kube_apiserver_service_node_port_range }} \
  --tls-cert-file={{ k8s_master__pki_dir }}/kube-apiserver.crt \
  --tls-cipher-suites={{ k8s_master__kube_apiserver_tls_cipher_suites }} \
  --tls-min-version={{ k8s_master__kube_apiserver_tls_min_version }} \
  --tls-private-key-file={{ k8s_master__pki_dir }}/kube-apiserver.key \
  --v={{ k8s_master__kube_apiserver_vlog_level }}
Restart=always
RestartSec={{ k8s_master__kube_apiserver_restart_sec }}s
Type=notify

[Install]
WantedBy=multi-user.target
