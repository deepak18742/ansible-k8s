- name: pki dir exists
  file:
    path: '{{ k8s_master__pki_dir }}'
    owner: root
    group: root
    mode: 0755
    state: directory

- name: openssl config
  block:
  - name: Check if openssl config exists
    stat:
      path: '{{ k8s_master__pki_dir }}/openssl.k8s-master.conf'
    register: _stat_result
  - name: openssl config exists
    template:
      src: pki/openssl.conf.j2
      dest: '{{ k8s_master__pki_dir }}/openssl.k8s-master.conf'
      owner: root
      group: root
      mode: 0644
    when: not _stat_result.stat.exists

- name: CA key and certificate
  block:
  - name: CA key is installed
    copy:
      src: '{{ k8s__local_shared_dir }}/ca.key'
      dest: '{{ k8s_master__pki_dir }}'
      owner: kubernetes
      group: kubernetes
      mode: 0600
  - name: CA certificates is installed
    copy:
      src: '{{ k8s__local_shared_dir }}/ca.crt'
      dest: '{{ k8s_master__pki_dir }}'
      owner: kubernetes
      group: kubernetes
      mode: 0644

- name: kube-apiserver server certificate
  block:
  - name: Check if kube-apiserver.key exists
    stat:
      path: '{{ k8s_master__pki_dir }}/kube-apiserver.key'
    register: _stat_result
  - name: Private key for kube-apiserver server certificate exists
    command: openssl ecparam -name {{ k8s_master__elliptic_curve_type }} -genkey -noout -out {{ k8s_master__pki_dir }}/kube-apiserver.key
    when: not _stat_result.stat.exists
  - name: Permission of kube-apiserver server key is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/kube-apiserver.key'
      owner: kubernetes
      group: kubernetes
      mode: 0600
  - name: Check if kube-apiserver.crt exists
    stat:
      path: '{{ k8s_master__pki_dir }}/kube-apiserver.crt'
    register: _stat_result
  - name: kube-apiserver server certificate exists
    shell: openssl req -new -sha256 -key {{ k8s_master__pki_dir }}/kube-apiserver.key -subj "/CN=kube-apiserver" | openssl x509 -req -sha256 -CA {{ k8s_master__pki_dir }}/ca.crt -CAkey {{ k8s_master__pki_dir }}/ca.key -CAcreateserial -out {{ k8s_master__pki_dir }}/kube-apiserver.crt -days {{ k8s_master__kube_apiserver_server_cert_valid_days }} -extensions v3_req_apiserver -extfile {{ k8s_master__pki_dir }}/openssl.k8s-master.conf
    when: not _stat_result.stat.exists
  - name: Permission of kube-apiserver server certificate is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/kube-apiserver.crt'
      owner: kubernetes
      group: kubernetes
      mode: 0644

- name: kube-apiserver client certificate
  block:
  - name: Check if kube-apiserver-client.key exists
    stat:
      path: '{{ k8s_master__pki_dir }}/kube-apiserver-client.key'
    register: _stat_result
  - name: Private key for kube-apiserver client certificate exists
    command: openssl ecparam -name {{ k8s_master__elliptic_curve_type }} -genkey -noout -out {{ k8s_master__pki_dir }}/kube-apiserver-client.key
    when: not _stat_result.stat.exists
  - name: Permission of kube-apiserver-client.key is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/kube-apiserver-client.key'
      owner: kubernetes
      group: kubernetes
      mode: 0600
  - name: Check if kube-apiserver-client.crt exists
    stat:
      path: '{{ k8s_master__pki_dir }}/kube-apiserver-client.crt'
    register: _stat_result
  - name: kube-apiserver client certificate exists
    shell: openssl req -new -key {{ k8s_master__pki_dir }}/kube-apiserver-client.key -subj "/CN=kube-apiserver/O=system:masters" | openssl x509 -req -sha256 -CA {{ k8s_master__pki_dir }}/ca.crt -CAkey {{ k8s_master__pki_dir }}/ca.key -CAcreateserial -out {{ k8s_master__pki_dir }}/kube-apiserver-client.crt -days {{ k8s_master__kube_apiserver_client_cert_valid_days }} -extensions v3_req_client -extfile {{ k8s_master__pki_dir }}/openssl.k8s-master.conf
    when: not _stat_result.stat.exists
  - name: Permission of kube-apiserver-client.crt is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/kube-apiserver-client.crt'
      owner: kubernetes
      group: kubernetes
      mode: 0644

- name: Admin client certificate
  block:
  - name: Check if admin.key exists
    stat:
      path: '{{ k8s_master__pki_dir }}/admin.key'
    register: _stat_result
  - name: Private key for admin client certificate exists
    command: openssl ecparam -name {{ k8s_master__elliptic_curve_type }} -genkey -noout -out {{ k8s_master__pki_dir }}/admin.key
    when: not _stat_result.stat.exists
  - name: Permission of admin client key is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/admin.key'
      owner: root
      group: root
      mode: 0600
  - name: Check if admin.crt exists
    stat:
      path: '{{ k8s_master__pki_dir }}/admin.crt'
    register: _stat_result
  - name: Admin client certificate exists
    shell: openssl req -new -key {{ k8s_master__pki_dir }}/admin.key -subj "/CN=kubernetes-admin/O=system:masters" | openssl x509 -req -sha256 -CA {{ k8s_master__pki_dir }}/ca.crt -CAkey {{ k8s_master__pki_dir }}/ca.key -CAcreateserial -out {{ k8s_master__pki_dir }}/admin.crt -days {{ k8s_master__admin_client_cert_valid_days }} -extensions v3_req_client -extfile {{ k8s_master__pki_dir }}/openssl.k8s-master.conf
    when: not _stat_result.stat.exists
  - name: Permission of admin client certificate is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/admin.crt'
      owner: root
      group: root
      mode: 0644

- name: kube-controller-manager client certificate
  block:
  - name: Check if kube-controller-manager-client.key exists
    stat:
      path: '{{ k8s_master__pki_dir }}/kube-controller-manager-client.key'
    register: _stat_result
  - name: Private key for kube-controller-manager client certificate exists
    command: openssl ecparam -name {{ k8s_master__elliptic_curve_type }} -genkey -noout -out {{ k8s_master__pki_dir }}/kube-controller-manager-client.key
    when: not _stat_result.stat.exists
  - name: Permission of kube-controller-manager client key is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/kube-controller-manager-client.key'
      owner: kubernetes
      group: kubernetes
      mode: 0600
  - name: Check if kube-controller-manager-client.pub exists
    stat:
      path: '{{ k8s_master__pki_dir }}/kube-controller-manager-client.pub'
    register: _stat_result
  - name: Public key for kube-controller-manager client certificate exists
    command: openssl ec -in {{ k8s_master__pki_dir }}/kube-controller-manager-client.key -outform PEM -pubout -out {{ k8s_master__pki_dir }}/kube-controller-manager-client.pub
    when: not _stat_result.stat.exists
  - name: Permission of kube-controller-manager client public key is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/kube-controller-manager-client.pub'
      owner: kubernetes
      group: kubernetes
      mode: 0644
  - name: Check if kube-controller-manager-client.crt exists
    stat:
      path: '{{ k8s_master__pki_dir }}/kube-controller-manager-client.crt'
    register: _stat_result
  - name: kube-controller-manager client certificate exists
    shell: openssl req -new -sha256 -key {{ k8s_master__pki_dir }}/kube-controller-manager-client.key -subj "/CN=system:kube-controller-manager" | openssl x509 -req -sha256 -CA {{ k8s_master__pki_dir }}/ca.crt -CAkey {{ k8s_master__pki_dir }}/ca.key -CAcreateserial -out {{ k8s_master__pki_dir }}/kube-controller-manager-client.crt -days {{ k8s_master__kube_controller_manager_client_cert_valid_days }} -extensions v3_req_client -extfile {{ k8s_master__pki_dir }}/openssl.k8s-master.conf
    when: not _stat_result.stat.exists
  - name: Permission of kube-controller-manager client certificate is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/kube-controller-manager-client.crt'
      owner: kubernetes
      group: kubernetes
      mode: 0644

- name: kube-scheduler client certificate
  block:
  - name: Check if kube-scheduler-client.key exists
    stat:
      path: '{{ k8s_master__pki_dir }}/kube-scheduler-client.key'
    register: _stat_result
  - name: Private key for kube-scheduler client certificate exists
    command: openssl ecparam -name {{ k8s_master__elliptic_curve_type }} -genkey -noout -out {{ k8s_master__pki_dir }}/kube-scheduler-client.key
    when: not _stat_result.stat.exists
  - name: Permission of kube-scheduler client key is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/kube-scheduler-client.key'
      owner: kubernetes
      group: kubernetes
      mode: 0600
  - name: Check if kube-scheduler-client.crt exists
    stat:
      path: '{{ k8s_master__pki_dir }}/kube-scheduler-client.crt'
    register: _stat_result
  - name: kube-scheduler client certificate exists
    shell: openssl req -new -sha256 -key {{ k8s_master__pki_dir }}/kube-scheduler-client.key -subj "/CN=system:kube-scheduler" | openssl x509 -req -sha256 -CA {{ k8s_master__pki_dir }}/ca.crt -CAkey {{ k8s_master__pki_dir }}/ca.key -CAcreateserial -out {{ k8s_master__pki_dir }}/kube-scheduler-client.crt -days {{ k8s_master__kube_scheduler_client_cert_valid_days }} -extensions v3_req_client -extfile {{ k8s_master__pki_dir }}/openssl.k8s-master.conf
    when: not _stat_result.stat.exists
  - name: Permission of kube-scheduler client certificate is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/kube-scheduler-client.crt'
      owner: kubernetes
      group: kubernetes
      mode: 0644

- name: front-proxy client certificate
  block:
  - name: Check if front-proxy-client.key exists
    stat:
      path: '{{ k8s_master__pki_dir }}/front-proxy-client.key'
    register: _stat_result
  - name: Private key for front-proxy client certificate exists
    command: openssl ecparam -name {{ k8s_master__elliptic_curve_type }} -genkey -noout -out {{ k8s_master__pki_dir }}/front-proxy-client.key
    when: not _stat_result.stat.exists
  - name: Permission of front-proxy client key is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/front-proxy-client.key'
      owner: kubernetes
      group: kubernetes
      mode: 0600
  - name: Check if front-proxy-client.crt exists
    stat:
      path: '{{ k8s_master__pki_dir }}/front-proxy-client.crt'
    register: _stat_result
  - name: front-proxy client certificate exists
    shell: openssl req -new -sha256 -key {{ k8s_master__pki_dir }}/front-proxy-client.key -subj "/CN=front-proxy-client" | openssl x509 -req -sha256 -CA {{ k8s_master__pki_dir }}/ca.crt -CAkey {{ k8s_master__pki_dir }}/ca.key -CAcreateserial -out {{ k8s_master__pki_dir }}/front-proxy-client.crt -days {{ k8s_master__front_proxy_client_cert_valid_days }} -extensions v3_req_client -extfile {{ k8s_master__pki_dir }}/openssl.k8s-master.conf
    when: not _stat_result.stat.exists
  - name: Permission of front-proxy client certificate is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/front-proxy-client.crt'
      owner: kubernetes
      group: kubernetes
      mode: 0644

- name: kube-controller-manager server certificate
  block:
  - name: Check if 'kube-controller-manager.key' exists
    stat:
      path: '{{ k8s_master__pki_dir }}/kube-controller-manager.key'
    register: _stat_result
  - name: Private key for kube-controller-manager server certificate exists
    command: openssl ecparam -name {{ k8s_master__elliptic_curve_type }} -genkey -noout -out {{ k8s_master__pki_dir }}/kube-controller-manager.key
    when: not _stat_result.stat.exists
  - name: Permission of kube-controller-manager server key is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/kube-controller-manager.key'
      owner: kubernetes
      group: kubernetes
      mode: 0600
  - name: Check if 'kube-controller-manager.crt' exists
    stat:
      path: '{{ k8s_master__pki_dir }}/kube-controller-manager.crt'
    register: _stat_result
  - name: kube-controller-manager server certificate exists
    shell: openssl req -new -sha256 -key {{ k8s_master__pki_dir }}/kube-controller-manager.key -subj "/CN=kube-controller-manager" | openssl x509 -req -sha256 -CA {{ k8s_master__pki_dir }}/ca.crt -CAkey {{ k8s_master__pki_dir }}/ca.key -CAcreateserial -out {{ k8s_master__pki_dir }}/kube-controller-manager.crt -days {{ k8s_master__kube_controller_manager_server_cert_valid_days }} -extensions v3_req_kube_controller_manager -extfile {{ k8s_master__pki_dir }}/openssl.k8s-master.conf
    when: not _stat_result.stat.exists
  - name: Permission of kube-controller-manager server certificate is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/kube-controller-manager.crt'
      owner: kubernetes
      group: kubernetes
      mode: 0644
  when: not k8s_master__kube_controller_manager_use_auto_generated_serving_cert

- name: kube-scheduler server certificate for a node
  block:
  - name: Check if 'kube-scheduler.key' exists
    stat:
      path: '{{ k8s_master__pki_dir }}/kube-scheduler.key'
    register: _stat_result
  - name: Private key for kube-scheduler server certificate exists
    command: openssl ecparam -name {{ k8s_master__elliptic_curve_type }} -genkey -noout -out {{ k8s_master__pki_dir }}/kube-scheduler.key
    when: not _stat_result.stat.exists
  - name: Permission of kube-scheduler server key is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/kube-scheduler.key'
      owner: kubernetes
      group: kubernetes
      mode: 0600
  - name: Check if 'kube-scheduler.crt' exists
    stat:
      path: '{{ k8s_master__pki_dir }}/kube-scheduler.crt'
    register: _stat_result
  - name: kube-scheduler server certificate exists
    shell: openssl req -new -sha256 -key {{ k8s_master__pki_dir }}/kube-scheduler.key -subj "/CN=kube-scheduler" | openssl x509 -req -sha256 -CA {{ k8s_master__pki_dir }}/ca.crt -CAkey {{ k8s_master__pki_dir }}/ca.key -CAcreateserial -out {{ k8s_master__pki_dir }}/kube-scheduler.crt -days {{ k8s_master__kube_scheduler_server_cert_valid_days }} -extensions v3_req_kube_scheduler -extfile {{ k8s_master__pki_dir }}/openssl.k8s-master.conf
    when: not _stat_result.stat.exists
  - name: Permission of kube-scheduler server certificate is properly set
    file:
      path: '{{ k8s_master__pki_dir }}/kube-scheduler.crt'
      owner: kubernetes
      group: kubernetes
      mode: 0644
  when: not k8s_master__kube_scheduler_use_auto_generated_serving_cert
