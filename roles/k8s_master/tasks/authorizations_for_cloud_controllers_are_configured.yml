- name: k8s components are ready
  command: >-
    {{ k8s__k8s_bin_dir }}/kubectl get componentstatuses -o jsonpath='{.items[*].conditions[?(@.type=="Healthy")].status}'
  register: _componentstatuses
  until: _componentstatuses.stdout.find('False') == -1
  retries: 5
  delay: 5
  changed_when: false

- name: ClusterRole 'system:controller:cloud-node-controller' exists
  command: '{{ k8s__k8s_bin_dir }}/kubectl apply -f -'
  args:
    stdin: |
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: system:controller:cloud-node-controller
      rules:
      - apiGroups:
        - ""
        resources:
        - nodes
        verbs:
        - delete
        - get
        - patch
        - update
        - list
      - apiGroups:
        - ""
        resources:
        - nodes/status
        verbs:
        - patch
      - apiGroups:
        - ""
        resources:
        - events
        verbs:
        - create
        - patch
        - update
  register: _apply_result
  changed_when: '" created" in _apply_result.stdout or " configured" in _apply_result.stdout'
- name: ClusterRoleBinding 'system:controller:cloud-node-controller' exists
  command: '{{ k8s__k8s_bin_dir }}/kubectl apply -f -'
  args:
    stdin: |
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: system:controller:cloud-node-controller
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:cloud-node-controller
      subjects:
      - kind: ServiceAccount
        name: cloud-node-controller
        namespace: kube-system
  register: _apply_result
  changed_when: '" created" in _apply_result.stdout or " configured" in _apply_result.stdout'

- name: ClusterRole 'system:controller:pvl-controller' exists
  command: '{{ k8s__k8s_bin_dir }}/kubectl apply -f -'
  args:
    stdin: |
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: system:controller:pvl-controller
      rules:
      - apiGroups:
        - ""
        resources:
        - persistentvolumes
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ""
        resources:
        - events
        verbs:
        - create
        - patch
        - update
  register: _apply_result
  changed_when: '" created" in _apply_result.stdout or " configured" in _apply_result.stdout'
- name: ClusterRoleBinding 'system:controller:pvl-controller' exists
  command: '{{ k8s__k8s_bin_dir }}/kubectl apply -f -'
  args:
    stdin: |
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: system:controller:pvl-controller
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:controller:pvl-controller
      subjects:
      - kind: ServiceAccount
        name: pvl-controller
        namespace: kube-system
  register: _apply_result
  changed_when: '" created" in _apply_result.stdout or " configured" in _apply_result.stdout'
