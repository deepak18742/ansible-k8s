- name: pki dir exists
  file:
    path: '{{ k8s_node__pki_dir }}'
    owner: root
    group: root
    mode: 0755
    state: directory

- name: openssl config
  block:
  - name: Check if openssl config exists
    stat:
      path: '{{ k8s_node__pki_dir }}/openssl.k8s-node.conf'
    register: _stat_result
  - name: openssl config exists
    template:
      src: pki/openssl.conf.j2
      dest: '{{ k8s_node__pki_dir }}/openssl.k8s-node.conf'
      owner: root
      group: root
      mode: 0644
    when: not _stat_result.stat.exists

- name: CA key and certificate
  block:
  - name: CA key is installed
    copy:
      src: '{{ k8s__local_shared_dir }}/ca.key'
      dest: '{{ k8s_node__pki_dir }}'
      owner: kubernetes
      group: kubernetes
      mode: 0600
  - name: CA certificates is installed
    copy:
      src: '{{ k8s__local_shared_dir }}/ca.crt'
      dest: '{{ k8s_node__pki_dir }}'
      owner: kubernetes
      group: kubernetes
      mode: 0644

- name: kubelet server certificate for a node
  block:
  - name: Check if 'kubelet.key' exists
    stat:
      path: '{{ k8s_node__pki_dir }}/kubelet.key'
    register: _stat_result
  - name: Private key for kubelet server certificate exists
    command: /usr/bin/openssl ecparam -name {{ k8s_node__elliptic_curve_type }} -genkey -noout -out {{ k8s_node__pki_dir }}/kubelet.key
    when: not _stat_result.stat.exists
  - name: Permission of kubelet server key is properly set
    file:
      path: '{{ k8s_node__pki_dir }}/kubelet.key'
      owner: root
      group: root
      mode: 0600
  - name: Check if 'kubelet.crt' exists
    stat:
      path: '{{ k8s_node__pki_dir }}/kubelet.crt'
    register: _stat_result
  - name: kubelet server certificate exists
    shell: /usr/bin/openssl req -new -sha256 -key {{ k8s_node__pki_dir }}/kubelet.key -subj "/CN={{ ansible_facts.fqdn }}" | openssl x509 -req -sha256 -CA {{ k8s_node__pki_dir }}/ca.crt -CAkey {{ k8s_node__pki_dir }}/ca.key -CAcreateserial -out {{ k8s_node__pki_dir }}/kubelet.crt -days {{ k8s_node__kubelet_server_cert_valid_days }} -extensions v3_req_kubelet -extfile {{ k8s_node__pki_dir }}/openssl.k8s-node.conf
    when: not _stat_result.stat.exists
  - name: Permission of kubelet server certificate is properly set
    file:
      path: '{{ k8s_node__pki_dir }}/kubelet.crt'
      owner: root
      group: root
      mode: 0644

- name: kube-proxy client certificate
  block:
  - name: Check if kube-proxy.key exists
    stat:
      path: '{{ k8s_node__pki_dir }}/kube-proxy.key'
    register: stat_result
  - name: Private key for kube-proxy client certificate exists
    command: /usr/bin/openssl ecparam -name {{ k8s_node__elliptic_curve_type }} -genkey -noout -out {{ k8s_node__pki_dir }}/kube-proxy.key
    when: not stat_result.stat.exists
  - name: Permission of kube-proxy client key is properly set
    file:
      path: '{{ k8s_node__pki_dir }}/kube-proxy.key'
      owner: root
      group: root
      mode: 0600
  - name: Check if kube-proxy.crt exists
    stat:
      path: '{{ k8s_node__pki_dir }}/kube-proxy.crt'
    register: stat_result
  - name: kube-proxy client certificate exists
    shell: /usr/bin/openssl req -new -sha256 -key {{ k8s_node__pki_dir }}/kube-proxy.key -subj "/CN=system:kube-proxy/O=system:node-proxier" | openssl x509 -req -sha256 -CA {{ k8s_node__pki_dir }}/ca.crt -CAkey {{ k8s_node__pki_dir }}/ca.key -CAcreateserial -out {{ k8s_node__pki_dir }}/kube-proxy.crt -days {{ k8s_node__kube_proxy_client_cert_valid_days }} -extensions v3_req_client -extfile {{ k8s_node__pki_dir }}/openssl.k8s-node.conf
    when: not stat_result.stat.exists
  - name: Permission of kube-proxy client certificate is properly set
    file:
      path: '{{ k8s_node__pki_dir }}/kube-proxy.crt'
      owner: root
      group: root
      mode: 0644

- name: Admin client certificate
  block:
  - name: Check if admin.key exists
    stat:
      path: '{{ k8s_node__pki_dir }}/admin.key'
    register: _stat_result
  - name: Private key for admin client certificate exists
    command: /usr/bin/openssl ecparam -name {{ k8s_node__elliptic_curve_type }} -genkey -noout -out {{ k8s_node__pki_dir }}/admin.key
    when: not _stat_result.stat.exists
  - name: Permission of admin client key is properly set
    file:
      path: '{{ k8s_node__pki_dir }}/admin.key'
      owner: root
      group: root
      mode: 0600
  - name: Check if admin.crt exists
    stat:
      path: '{{ k8s_node__pki_dir }}/admin.crt'
    register: _stat_result
  - name: Admin client certificate exists
    shell: /usr/bin/openssl req -new -key {{ k8s_node__pki_dir }}/admin.key -subj "/CN=kubernetes-admin/O=system:masters" | openssl x509 -req -sha256 -CA {{ k8s_node__pki_dir }}/ca.crt -CAkey {{ k8s_node__pki_dir }}/ca.key -CAcreateserial -out {{ k8s_node__pki_dir }}/admin.crt -days {{ k8s_node__admin_client_cert_valid_days }} -extensions v3_req_client -extfile {{ k8s_node__pki_dir }}/openssl.k8s-node.conf
    when: not _stat_result.stat.exists
  - name: Permission of admin client certificate is properly set
    file:
      path: '{{ k8s_node__pki_dir }}/admin.crt'
      owner: root
      group: root
      mode: 0644
